fun main() {

    /** 반복문
     * 코드 일부분을 원하는 만큼 반복 시키고자 할 때 사용한다.
     * for, while, do~while 문을 제공한다.
     */

    // for문
    // - 배열과 같이 값들을 관리하는 요소들을 이용해 코드를 반복한다.
    // - 다음과 같이 값을 4개를 갖고 있는 배열이 있을 경우 4번을 반복한다.
    val numbers = arrayOf(1, 2, 3, 4)
    for (number in numbers) {
        println(number)
    }

    println("----------------------------------")

    // 범위 연산자 사용가능. Java 보다 손쉽게 사용할 수 있다.
    val a1 = 1..10
    for (item in a1) {
        println(item)
    }

    println("----------------------------------")

    // 자바의 for문은 상대적으로 쓰기 복잡할 수 있다.
    /*for (int i = 0; i < 10; i++) {
        println(i)
    }*/

    // 위의 Java for문과 같은 코틀린 for문
    for (i in 0..9) {
        println(i)
    }

    println("----------------------------------")

    // 지정한 수만큼 증가시킬 수 있다.
    val a2 = 1..10 step 2
    for (item in a2) {
        println(item)
    }

    println("----------------------------------")

    // 역순으로
//    val a3 = 10..1
    val a3 = 10 downTo 1
    for (item in a3) {
        println(item)
    }

    println("----------------------------------")


    // while문
    // - 주어진 조건이 만족할 경우 반복한다.
    // - 조건식이 상단에 있으므로 조건식이 거짓이면 단 한 번도 수행되지 않는다.
    // - 코드를 수행할 때 마다 조건식을 확인하기 때문에 영원히 조건식이 참일 경우에는 주의가 필요하다.

    var a4 = 0
    while (a4 < 5) {
        println(a4)
        a4++
    }

    println("----------------------------------")

    // do while문
    // - 주어진 조건이 만족할 경우 반복한다.
    // - 조건식이 하단에 있으므로 조건식이 거짓이라도 한 번은 실행된다.
    // - 코드를 수행할 때 마다 조건식을 확인하기 때문에 영원히 조건식이 참일 경우에는 주의가 필요하다.

    var a5 = 0
    do {
        println(a5)
        a5++
    } while (a5 < 5)

}